name: DEPLOY SERVICE
run-name: DEPLOY SERVICE to Web App ${{ inputs.environment }}

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Target Environment"
        type: choice
        required: true
        options: [DEV, 04, PE, UAT, PROD]
      use_latest_success_on_main:
        description: "Use latest successful build on main?"
        type: boolean
        default: true
      build_run_id:
        description: "Run ID of BUILD SERVICE (if not using latest successful)"
        required: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    env:
      ARTIFACT_NAME: service
      # IMPORTANT: set this to the *filename* of your build workflow (not just its display name)
      BUILD_WORKFLOW_FILE: build-service.yml

    steps:
      - name: Download artifact (latest successful on main)
        if: inputs.use_latest_success_on_main == true
        uses: dawidd6/action-download-artifact@v3
        with:
          workflow: ${{ env.BUILD_WORKFLOW_FILE }}
          workflow_conclusion: success
          branch: main
          name: ${{ env.ARTIFACT_NAME }}

      - name: Download artifact by run-id
        if: inputs.use_latest_success_on_main != true
        uses: dawidd6/action-download-artifact@v3
        with:
          run_id: ${{ inputs.build_run_id }}
          name: ${{ env.Artifact_NAME }}

      - name: Verify artifact and unzip
        run: |
          test -f service.zip || { echo "service.zip not found in artifact"; exit 1; }
          unzip -q service.zip -d package
          ls -la package

      - name: Deploy to Azure Web App (Publish Profile)
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ vars.AZURE_WEBAPP_NAME }}                # set per-environment variable
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }} # set per-environment secret
          package: package
